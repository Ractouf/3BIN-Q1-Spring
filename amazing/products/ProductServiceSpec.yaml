openapi: 3.0.3
info:
  title: Products
  description: Amazing products
  version: 1.0.0
servers:
  - url: 'http://localhost:9001'
    description: Development server

paths:
  /products:

    get:
      summary: Reads all products
      responses:
        200:
          description: Returned a list of Products
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/product'

    post:
      summary: Creates a new product
      requestBody:
        description: Product to create
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/product'
      responses:
        409:
          description: Product already exists
        201:
          description: Product created
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/product'

    put:
      summary: Updates one entire Product
      requestBody:
        description: New values of the Product
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/product'
      responses:
        404:
          description: Product was not found
        200:
          description: Product was updated
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/product'

    delete:
      summary: Deletes all products
      responses:
        200:
          description: All Products were deleted

  /products/{hash}:
    parameters:
      - name: id
        in: path
        description: Id of the Product
        required: true
        schema:
          type: integer
          example: 1
        style: simple

    get:
      summary: Reads one Product
      responses:
        404:
          description: Product was not found
        200:
          description: Returned a Product
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/product'

    delete:
      summary: Deletes one Product
      responses:
        404:
          description: Product was not found
        200:
          description: Product was deleted

components:
  schemas:
    product:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        category:
          type: string
        price:
          type: integer
      example:
        id: 1
        name: Dami1
        price: 999
